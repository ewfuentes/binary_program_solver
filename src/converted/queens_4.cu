#include"../gpu_solver.h"
int main(int argc, char **argv) {
    cuda::std::array<cuda::std::tuple<int, pair<int>>, 64> const var_2_constr{
cuda::std::make_tuple(0, pair{1, 1}), 
cuda::std::make_tuple(0, pair{6, 1}), 
cuda::std::make_tuple(0, pair{9, 1}), 
cuda::std::make_tuple(0, pair{10, 1}), 
cuda::std::make_tuple(0, pair{17, 1}), 
cuda::std::make_tuple(0, pair{20, 1}), 
cuda::std::make_tuple(0, pair{21, 1}), 
cuda::std::make_tuple(1, pair{2, 1}), 
cuda::std::make_tuple(1, pair{3, 1}), 
cuda::std::make_tuple(1, pair{21, 1}), 
cuda::std::make_tuple(2, pair{5, 1}), 
cuda::std::make_tuple(2, pair{18, 1}), 
cuda::std::make_tuple(2, pair{20, 1}), 
cuda::std::make_tuple(3, pair{2, 1}), 
cuda::std::make_tuple(3, pair{6, 1}), 
cuda::std::make_tuple(3, pair{9, 1}), 
cuda::std::make_tuple(3, pair{10, 1}), 
cuda::std::make_tuple(3, pair{11, 1}), 
cuda::std::make_tuple(3, pair{17, 1}), 
cuda::std::make_tuple(3, pair{18, 1}), 
cuda::std::make_tuple(4, pair{2, 1}), 
cuda::std::make_tuple(4, pair{13, 1}), 
cuda::std::make_tuple(4, pair{14, 1}), 
cuda::std::make_tuple(5, pair{2, 1}), 
cuda::std::make_tuple(5, pair{4, 1}), 
cuda::std::make_tuple(5, pair{19, 1}), 
cuda::std::make_tuple(6, pair{4, 1}), 
cuda::std::make_tuple(6, pair{6, 1}), 
cuda::std::make_tuple(6, pair{7, 1}), 
cuda::std::make_tuple(6, pair{9, 1}), 
cuda::std::make_tuple(6, pair{10, 1}), 
cuda::std::make_tuple(6, pair{12, 1}), 
cuda::std::make_tuple(6, pair{17, 1}), 
cuda::std::make_tuple(7, pair{0, 1}), 
cuda::std::make_tuple(7, pair{6, 1}), 
cuda::std::make_tuple(7, pair{9, 1}), 
cuda::std::make_tuple(7, pair{10, 1}), 
cuda::std::make_tuple(7, pair{14, 1}), 
cuda::std::make_tuple(7, pair{16, 1}), 
cuda::std::make_tuple(7, pair{17, 1}), 
cuda::std::make_tuple(8, pair{7, 1}), 
cuda::std::make_tuple(8, pair{13, 1}), 
cuda::std::make_tuple(8, pair{15, 1}), 
cuda::std::make_tuple(9, pair{7, 1}), 
cuda::std::make_tuple(9, pair{14, 1}), 
cuda::std::make_tuple(9, pair{18, 1}), 
cuda::std::make_tuple(10, pair{7, 1}), 
cuda::std::make_tuple(10, pair{19, 1}), 
cuda::std::make_tuple(10, pair{21, 1}), 
cuda::std::make_tuple(11, pair{15, 1}), 
cuda::std::make_tuple(11, pair{16, 1}), 
cuda::std::make_tuple(11, pair{20, 1}), 
cuda::std::make_tuple(12, pair{0, 1}), 
cuda::std::make_tuple(12, pair{15, 1}), 
cuda::std::make_tuple(12, pair{18, 1}), 
cuda::std::make_tuple(13, pair{0, 1}), 
cuda::std::make_tuple(13, pair{8, 1}), 
cuda::std::make_tuple(13, pair{19, 1}), 
cuda::std::make_tuple(14, pair{0, 1}), 
cuda::std::make_tuple(14, pair{12, 1}), 
cuda::std::make_tuple(14, pair{21, 1}), 
cuda::std::make_tuple(15, pair{8, 1}), 
cuda::std::make_tuple(15, pair{12, 1}), 
cuda::std::make_tuple(15, pair{20, 1})
};
    cuda::std::array<cuda::std::tuple<int, pair<int>>, 64> const constr_2_var{
cuda::std::make_tuple(0, pair{7, 1}), 
cuda::std::make_tuple(0, pair{12, 1}), 
cuda::std::make_tuple(0, pair{13, 1}), 
cuda::std::make_tuple(0, pair{14, 1}), 
cuda::std::make_tuple(1, pair{0, 1}), 
cuda::std::make_tuple(2, pair{1, 1}), 
cuda::std::make_tuple(2, pair{3, 1}), 
cuda::std::make_tuple(2, pair{4, 1}), 
cuda::std::make_tuple(2, pair{5, 1}), 
cuda::std::make_tuple(3, pair{1, 1}), 
cuda::std::make_tuple(4, pair{5, 1}), 
cuda::std::make_tuple(4, pair{6, 1}), 
cuda::std::make_tuple(5, pair{2, 1}), 
cuda::std::make_tuple(6, pair{0, 1}), 
cuda::std::make_tuple(6, pair{3, 1}), 
cuda::std::make_tuple(6, pair{6, 1}), 
cuda::std::make_tuple(6, pair{7, 1}), 
cuda::std::make_tuple(7, pair{6, 1}), 
cuda::std::make_tuple(7, pair{8, 1}), 
cuda::std::make_tuple(7, pair{9, 1}), 
cuda::std::make_tuple(7, pair{10, 1}), 
cuda::std::make_tuple(8, pair{13, 1}), 
cuda::std::make_tuple(8, pair{15, 1}), 
cuda::std::make_tuple(9, pair{0, 1}), 
cuda::std::make_tuple(9, pair{3, 1}), 
cuda::std::make_tuple(9, pair{6, 1}), 
cuda::std::make_tuple(9, pair{7, 1}), 
cuda::std::make_tuple(10, pair{0, 1}), 
cuda::std::make_tuple(10, pair{3, 1}), 
cuda::std::make_tuple(10, pair{6, 1}), 
cuda::std::make_tuple(10, pair{7, 1}), 
cuda::std::make_tuple(11, pair{3, 1}), 
cuda::std::make_tuple(12, pair{6, 1}), 
cuda::std::make_tuple(12, pair{14, 1}), 
cuda::std::make_tuple(12, pair{15, 1}), 
cuda::std::make_tuple(13, pair{4, 1}), 
cuda::std::make_tuple(13, pair{8, 1}), 
cuda::std::make_tuple(14, pair{4, 1}), 
cuda::std::make_tuple(14, pair{7, 1}), 
cuda::std::make_tuple(14, pair{9, 1}), 
cuda::std::make_tuple(15, pair{8, 1}), 
cuda::std::make_tuple(15, pair{11, 1}), 
cuda::std::make_tuple(15, pair{12, 1}), 
cuda::std::make_tuple(16, pair{7, 1}), 
cuda::std::make_tuple(16, pair{11, 1}), 
cuda::std::make_tuple(17, pair{0, 1}), 
cuda::std::make_tuple(17, pair{3, 1}), 
cuda::std::make_tuple(17, pair{6, 1}), 
cuda::std::make_tuple(17, pair{7, 1}), 
cuda::std::make_tuple(18, pair{2, 1}), 
cuda::std::make_tuple(18, pair{3, 1}), 
cuda::std::make_tuple(18, pair{9, 1}), 
cuda::std::make_tuple(18, pair{12, 1}), 
cuda::std::make_tuple(19, pair{5, 1}), 
cuda::std::make_tuple(19, pair{10, 1}), 
cuda::std::make_tuple(19, pair{13, 1}), 
cuda::std::make_tuple(20, pair{0, 1}), 
cuda::std::make_tuple(20, pair{2, 1}), 
cuda::std::make_tuple(20, pair{11, 1}), 
cuda::std::make_tuple(20, pair{15, 1}), 
cuda::std::make_tuple(21, pair{0, 1}), 
cuda::std::make_tuple(21, pair{1, 1}), 
cuda::std::make_tuple(21, pair{10, 1}), 
cuda::std::make_tuple(21, pair{14, 1})
};
    std::string self = "queens_4";
    using namespace std::literals;
    std::chrono::seconds duration = 1min;
    if (argc >= 2){
        duration = std::chrono::minutes(std::stoi(argv[1]));
    }
    auto const config = run_config{
        .self = self,
        .duration = duration
    };
    auto const problem = problem_t<16, 22, 64>{
        .obj = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        .rhs = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
        .rhs_n = {4, 1, 4, 1, 2, 1, 4, 4, 2, 4, 4, 1, 3, 2, 3, 3, 2, 4, 4, 3, 4, 4},
        .is_eq = bitset<22>::from(cuda::std::array<bool, 22>{true, false, true, false, false, false, true, true, false, true, true, false, false, false, false, false, false, true, false, false, true, false}),
        .var_2_constr = range_array<pair<int>, 16, 64>(var_2_constr),
        .constr_2_var = range_array<pair<int>, 22, 64>(constr_2_var),
    };
    solve_gpu_impl(problem, config);
}

